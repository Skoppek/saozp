services:
  db:
    image: postgres:16.2
    restart: always
    ports:
      - '5432:${POSTGRES_PORT}'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 2s
      timeout: 10s
      retries: 10
    volumes:
      - db:/home/mskop/saozp/psql
    expose:
      - ${POSTGRES_PORT}
    networks:
      - mynet

  migration:
    image: migration
    build:
      context: .
      dockerfile: ./migration/Dockerfile
      args:
        - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynet

  proxy:
    build: ./proxy
    image: saozp-proxy
    restart: always
    networks:
      - mynet
    ports:
      - '5173:5173'

  judgeclient:
    build: ./judgeclient
    image: judgeclient
    restart: always
    networks:
      - mynet
    ports:
      - '3002:3002'
    expose:
      - 3002
    environment:
      - HOST_IP=${HOST_IP}
      - JUDGE0_PORT=${JUDGE0_PORT}

  testsender:
    build:
      context: ./testsender
    image: testsender
    restart: always
    depends_on:
      migration:
        condition: service_completed_successfully
      judgeclient:
        condition: service_started
    networks:
      - mynet
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/postgres
      - FETCH_PERIOD=${FETCH_PERIOD}
      - FETCH_LIMIT=${FETCH_LIMIT}
      - JUDGE_CLIENT_IP=judgeclient

  backend:
    build:
      context: ./backend
    image: saozp-backend
    restart: always
    depends_on:
      migration:
        condition: service_completed_successfully
      judgeclient:
        condition: service_started
      testsender:
        condition: service_started
    healthcheck:
      test: curl --fail http://${HOST_IP}:5173/api || exit 1
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - mynet
    ports:
      - '3000:3000'
    links:
      - db
    environment:
      - DEPLOYMENT=${DEPLOYMENT}
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/postgres
      - ADMIN_LOGIN=${ADMIN_LOGIN}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_FIRST_NAME=${ADMIN_FIRST_NAME}
      - ADMIN_LAST_NAME=${ADMIN_LAST_NAME}
      - SESSION_LENGTH_IN_HOURS=${SESSION_LENGTH_IN_HOURS}
      - JUDGE_CLIENT_IP=judgeclient

  frontend:
    build: ./frontend
    image: saozp-frontend
    restart: always
    depends_on:
      backend:
        condition: service_started
      proxy:
        condition: service_started
    networks:
      - mynet
    ports:
      - '3001:3001'
    environment:
      - VITE_API_URL=${HOST_IP}:5137/api/

networks:
  mynet:
    driver: bridge

volumes:
  data:
  db:
    driver: local
