services:
 apidb:
  image: postgres:16.2
  restart: always
  ports:
   - '5432:5432'
  environment:
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=postgres
  healthcheck:
   test: ['CMD-SHELL', 'pg_isready -U postgres']
   interval: 1s
   timeout: 5s
   retries: 10
  volumes:
   - apidb:/var/lib/postgresql/data
  expose:
   - 5432
  networks:
   - mynet

 migration:
  image: migration
  build:
   context: .
   dockerfile: ./backend/drizzle-migration/Dockerfile
  depends_on:
   apidb:
    condition: service_healthy
  networks:
   - mynet
  environment:
   - DB_CONNECTION_STRING=postgres://postgres:postgres@apidb:5432/postgres

 proxy:
  build: ./proxy
  image: saozp-proxy
  restart: always
  networks:
   - mynet
  ports:
   - '5173:5173'
  links:
   - backend
  expose:
   - 80

 judgeclient:
  build: ./judgeclient
  image: judgeclient
  restart: always
  networks:
   - mynet
  ports:
   - '3002:3002'

 backend:
  build:
   context: ./backend
   args:
    - DB_CONNECTION_STRING=postgres://postgres:postgres@apidb:5432/postgres
  image: saozp-backend
  restart: always
  depends_on:
   migration:
    condition: service_completed_successfully
  healthcheck:
   test: curl --fail http://localhost:3000 || exit 1
   interval: 30s
   timeout: 30s
   retries: 3
  networks:
   - mynet
  ports:
   - '3000:3000'
  links:
   - apidb
  environment:
   - ADMIN_LOGIN=admin
   - ADMIN_PASSWORD=admin
   - ADMIN_FIRST_NAME=Admin
   - ADMIN_LAST_NAME=Account
   - SESSION_LENGTH_IN_HOURS=5

 frontend:
  build: ./frontend
  image: saozp-frontend
  restart: always
  depends_on:
   backend:
    condition: service_started
   proxy:
    condition: service_started
  networks:
   - mynet
  ports:
   - '80:80'
  links:
   - backend
  environment:
   - VITE_SAOZP_BACKEND_URL=backend

networks:
 mynet:
  driver: bridge

volumes:
 data:
 apidb:
  driver: local
