config:
 target: 'http://localhost:2358'
 phases:
  - name: warmup
    duration: 10
    arrivalRate: 10
    maxVusers: 50
  # - name: testing_phase
  #   duration: 1800
  #   arrivalRate: 5
  # - name: submitting
  #   duration: 300
  #   arrivalRate: 2
 processor: './functions.js'
scenarios:
 - flow:
    - function: 'generateTestCase'
    # - log: '{{input}} -> {{expected_output}}'
    - post:
       url: '/submissions'
       headers:
        Content-Type: 'application/json'
       json:
        source_code: '#include<stdio.h>#include<stdlib.h>#define S 100int c(const void *a,const void *b){return(*(int*)a-*(int*)b);}int main(){int n[S],i;for(i=0;i<S;i++){if(scanf("%d",&n[i])!=1){fprintf(stderr,"Error.\n");return 1;}}qsort(n,S,sizeof(int),c);for(i=0;i<S;i++){printf("%d ",n[i]);}printf("\n");return 0;}'
        language_id: 50
        stdin: '{{input}}'
        expected_output: '{{expected_output}}'
       capture:
        json: '$.token'
        as: 'token'
    - loop:
       # Aby uniknąć zalania sprawdzeniami o status
       # dodano 1s przerwy reprezentującą akceptowalny dla użytkownika czas czekania
       - think: 1
       - get:
          url: '/submissions/{{ token }}'
          capture:
           - json: $.status.id
             as: statusId
           - json: $.stdout
             as: stdout
      whileTrue: 'isNotDone'
    - function: 'logStatus'
